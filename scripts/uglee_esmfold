#!/bin/bash
if [ ${#} -ne 1 ] ; then
        echo "Usage: uglee_esmfold [input dir]"
        echo "Usage: You must used MPNN first"
        exit 1
fi

if [[ -d $1 ]]; then
    target_directory=$1
else
    echo "Usage: uglee_esmfold [input dir]"
    exit 1
fi


## ??? ? ????? ?? ?????? fasta ??? ??, ? ??? ??? ??? ??, ??? ??? ?? ??? ?? ??
# Create a list of input fasta files
find ${input_dir} -name *fa > falist

# Get the number of lines in the falist file
# just count the number of pdb_files in the input_dir
linenumber=`wc -l falist | awk '{printf ($1)}'`


if [ -d ef ]; then
    rm -r ef
fi
mkdir ef || { echo "Failed to create 'ef' folder"; exit 1; }


for f in $(seq 1 $linenumber)
do
    # Get the filename from the current line in the falist file
    # ????, head -$f falist | tail -1 ??? ???? falist ??? $f?? ?? ??? ?????. head -$f falist? ??? ???? $f?? ???? ??? ????, tail -1? ? ??? ??? ?? ?????. ??? ?? $f?? ?? ??? ??? ? ????.
    filename=$(head -$f falist | tail -1)
    
    # Get the base name of the filename without the ".fa" extension
    fa_name=$(basename "$filename" .fa)
    
    # Iterate over each sample (1 to 5)
    for g in $(seq 1 5)
    do
        # Append the header line to the "ef.fasta" file
        # ????? fasta??? "">??"??
        printf ">" >> ef/ef.fasta
        echo ${fa_name}_ef${g}>> ef/ef.fasta
        
        # Extract the lines containing the sample number from the input fasta file and append them to the "ef.fasta" file
        # grep -r -A 1 -h "sample=$g" $filename > ttt? ?? ???? "sample=$g" ???? ???? ??? ? ?? ??? ??? "ttt" ??? ??
        grep -r -A 1 -h "id=$g" $filename > ttt
        # ?? ?? head -2 ttt | tail -1 >> ef/ef.fasta? "ttt" ??? ? ? ? ? ? ?? ?? "ef.fasta" ??? ??
        # ????? mpnn ??? fasta ??? ??? ???
        head -2 ttt | tail -1 >> ef/ef.fasta
    done
done

# Change directory to "ef"
cd ef

command_status=$?
if [ $command_status -eq 0 ]; then
    echo "==================esmfold_ready_succeed======================"
else
    echo "=======================esmfold_ready_failed===================="
    exit 1
fi
# Run the "efold" command on the "ef.fasta" file and save the output to "ef.log"
# tee ??? ?????? ???? ????, ? ????? ??? ?? ????? ???? ???? ??? ???? ??? ? ?? ????. ? ??, efold? ??? ?? ???? ????? ??? "ef.log" ???? ?????.
source /home/uglee/miniconda3/bin/activate /home/uglee/miniconda3/envs/esmfold
output_dir=$PWD
python3 /home/uglee/esm/scripts/fold.py -i ef.fasta -o $output_dir | tee ../ef.log

# Change directory back to the previous directorycd ..
cd ..

# Print a message indicating that Esmfold is running in the background

