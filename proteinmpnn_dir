#!/bin/bash
#SBATCH -p gpu
#SBATCH --mem=32g
#SBATCH --gres=gpu:rtx2080:1
#SBATCH -c 2
#SBATCH --output=example_2.out
#echo "proteinmpnn_dir [folder containing target pdb files] [target chain, optional, default is X]"

export PATH="/home/hnc/miniconda3/bin:$PATH"
source activate mlfold

if [ ${#} -eq 0 ]; then
        echo "Please type folder(ex.pdb_crmsd) containing pdb files after command"
        echo "proteinmpnn_dir [pdb files directory] [target chain (optional, default is X)]"
        exit 1
elif [ ${#} -gt 2 ]; then
	echo "Invalid file format"
	exit 1
else 	pdb_dir=$1
	folder_with_pdbs=$pdb_dir
fi

if [ ${#} -eq 1 ]; then
        echo "target chain is X(default)"
	target_chain="X"
elif [ ${#} -eq 2 ]; then
	echo "target chain is $2"
	target_chain=$2
fi

if [ ! -d ${pdb_dir} ]; then
        echo "no input pdb folder in this directory"
        exit 1
fi

output_dir="."

path_for_parsed_chains=$output_dir"/parsed_pdbs.jsonl"
path_for_assigned_chains=$output_dir"/assigned_pdbs.jsonl"
chains_to_design="${target_chain}"

python $proteinmpnn/helper_scripts/parse_multiple_chains.py --input_path=$folder_with_pdbs --output_path=$path_for_parsed_chains

python $proteinmpnn/helper_scripts/assign_fixed_chains.py --input_path=$path_for_parsed_chains --output_path=$path_for_assigned_chains --chain_list "$chains_to_design"

python $proteinmpnn/protein_mpnn_run.py \
        --jsonl_path $path_for_parsed_chains \
        --chain_id_jsonl $path_for_assigned_chains \
        --out_folder $output_dir \
        --num_seq_per_target 5 \
        --sampling_temp "0.1" \
        --seed 37 \
        --batch_size 1

rm parsed_pdbs.jsonl
rm assigned_pdbs.jsonl 

conda deactivate
echo "Done, output directory is seqs"

